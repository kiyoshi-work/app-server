[
  {
    "pageContent": "Solana is a high-performance, permissionless blockchain project maintained by the Solana Foundation in Geneva, Switzerland. It aims to demonstrate that blockchain can achieve the theoretical limits of transaction processing speed on adversarial networks by utilizing a method of shared time among nodes.\n\nCentralized databases can handle 710,000 transactions per second using Optimistic Concurrency Control, a technique that Solana applies to blockchain. Solana's innovation includes a verifiable delay function, a SHA 256 hash chain, to synchronize the ledger and achieve consensus, moving towards the goal of 710,000 transactions per second.\n\nThe Solana documentation provides comprehensive information on the project, its usefulness, operation, and the enduring functionality of its architecture. It outlines a theoretical maximum of 710,000 transactions per second on gigabit networks and 28.4 million on 40 gigabit networks, emphasizing scalability, security, and decentralization.\n\nA Solana cluster consists of computers that collaborate to verify user-submitted programs and maintain an immutable ledger. This ledger tracks work contributions to the cluster and can represent real-world asset possession.\n\nSolana's native token is the SOL, which can be used for transactions and to incentivize nodes. Smaller denominations of SOL, called lamports, facilitate micro-payments.\n\nThe documentation also includes disclaimers regarding the accuracy and truthfulness of its content and clarifies that it is not an investment solicitation.\n\nSolana's ecosystem is vast, with various resources for developers, including JSON RPC methods, terminology guides, and sections on core and advanced concepts. It also provides information on developing programs in C and Rust, economics, staking, and inflation schedules.\n\nThe Solana Foundation oversees the project and offers grants, a media kit, career opportunities, and maintains a blog and newsletter to keep the community informed and connected.",
    "metadata": {
      "source": "https://solana.com/docs/intro",
      "title": "Introduction | Solana",
      "description": "Fast. Decentralized. Scalable. Energy efficient. Solana can power thousands of transactions per second.",
      "language": "en"
    }
  },
  {
    "pageContent": "Solana Economics Overview\n\nThe economic model of Solana is crafted to sustain a robust economy over the long term, ensuring that incentives for participants are aligned with the network's security and decentralization. The primary contributors to this economy are the validators, who play a crucial role in maintaining the network's integrity through state validation. Their incentives are derived from two main sources: protocol-based rewards and transaction fees.\n\nProtocol-based rewards stem from the network's inflationary policies, which are governed by a predefined inflation schedule. These rewards, along with transaction fees, form the bulk of the compensation for validators, especially in the network's early stages. Rewards are distributed each epoch among validators and staked delegators, with the annual inflation rate following a set disinflationary trajectory to ensure predictable supply and long-term economic stability.\n\nTransaction fees are charged for processing network activities, serving both as an incentive for validators and as a means of economic stability and protection against network forks, with a portion of each fee being burned.\n\nThe document proceeds to detail Solana's inflation strategy, starting with key terminology, followed by the specific parameters of the inflation schedule. It also touches on how inflation impacts staking yields and the behavior of token holders.\n\nFollowing the inflation discussion, the document explores transaction fees and the concept of storage rent. Storage rent is implemented to cover the costs associated with maintaining the ledger's active state.\n\nFor further information on Solana's economic model, including detailed discussions on inflation, staking, and transaction fees, as well as advanced concepts and developer resources, please refer to the Solana documentation.\n\nThe Solana Foundation manages this content, and more information can be found on their official website, including grant opportunities, career openings, and updates on the ecosystem. The Foundation is committed to transparency and privacy, with detailed disclaimers and privacy policies available online. Stay connected with the latest news and developments by visiting the Solana blog or subscribing to their newsletter.",
    "metadata": {
      "source": "https://solana.com/docs/intro/economics",
      "title": "Solana Economics Overview | Solana",
      "description": "Fast. Decentralized. Scalable. Energy efficient. Solana can power thousands of transactions per second.",
      "language": "en"
    }
  },
  {
    "pageContent": "Solana's Storage Rent Economics\n\nSolana's ledger requires each transaction to cover its costs. While transaction fees compensate for immediate validation expenses, they don't cover the ongoing storage of ledger data. Validators and the network bear this cost, which increases with the ledger's active state size. To address this, Solana has implemented a storage rent system.\n\nThere are two methods to pay for storage rent:\n\n1. Prepaid Rent: Users can deposit two years' worth of rent to exempt their accounts from ongoing charges. This ensures data retention and benefits the network by reducing liquidity demands.\n\n2. Pay-as-you-go Rent: Accounts with less than the prepaid amount are charged rent per epoch, based on usage and a rate established at the network's inception.\n\nNew accounts must now hold a minimum balance to be rent-exempt, and transactions that drop an account's balance below this threshold will fail. This policy effectively makes all accounts rent-exempt, although older rent-paying accounts will continue to do so until they either deplete their balance or top up to the exempt level.\n\nFor more technical details on storage rent, visit the Rent section in Solana's documentation.\n\nSolana Foundation Â© 2024. All rights reserved.",
    "metadata": {
      "source": "https://solana.com/docs/intro/rent",
      "title": "Storage Rent Economics | Solana",
      "description": "Fast. Decentralized. Scalable. Energy efficient. Solana can power thousands of transactions per second.",
      "language": "en"
    }
  },
  {
    "pageContent": "Solana Transaction Fees\n\nTransaction fees on the Solana blockchain are small payments required for the processing of instructions. These fees compensate validators for their computational resources, deter network spam, and contribute to the network's long-term economic stability by ensuring a minimum fee per transaction.\n\nUnderstanding Transaction Fees\n\nThe necessity for transaction fees arises from the need to reward validators, discourage spam, and maintain economic balance within the network. A portion of each fee is burned to reinforce the value of SOL, the native cryptocurrency, while the rest goes to the validator processing the transaction.\n\nEconomic Model\n\nSolana, like other blockchains, uses a combination of inflationary rewards and transaction fees to ensure network security. A predetermined percentage of each transaction fee is destroyed, and the rest is awarded to the validator, with a global inflation rate providing additional rewards.\n\nFee Burning\n\nBurning a fixed proportion of transaction fees helps secure the network by maintaining the value of SOL. This mechanism also discourages validators from censoring transactions, as they would incur a financial loss from not processing transactions.\n\nFee Calculation\n\nTransaction fees are determined by a base fee per signature and the computational resources used, measured in compute units. Transactions have a compute budget, and exceeding this budget results in a failed transaction.\n\nPrioritization Fees\n\nTransactions can include an optional prioritization fee to expedite processing. This fee is calculated by the number of compute units and their price in micro-lamports. Setting this fee involves including specific instructions in the transaction.\n\nBest Practices for Prioritization Fees\n\nTo minimize fees, transactions should request only the necessary compute units. It's also advisable to check recent prioritization fees to estimate an appropriate amount for faster processing.\n\nFee Collection and Distribution\n\nThe first writable signer account in a transaction is designated as the fee payer. Fees are deducted from this account before processing. If the account lacks sufficient funds, the transaction is dropped. Fees are split between burning and rewarding the block-producing validator.\n\nSolana's documentation provides comprehensive information on various topics, including RPC methods, terminology, core concepts, advanced concepts, client libraries, program development, economics, and more. Managed by the Solana Foundation, the platform offers grants, initiatives, and resources for those interested in contributing to or learning about the ecosystem.",
    "metadata": {
      "source": "https://solana.com/docs/intro/transaction_fees",
      "title": "Transaction Fees | Solana",
      "description": "Your guide to transaction fees on Solana -- small fees paid to process instructions on the network, based on computation and an optional prioritization fee.",
      "language": "en"
    }
  },
  {
    "pageContent": "Solana Wallet Guide\n\nThis guide provides an overview of wallet options for Solana users to send, receive, and manage SOL tokens on the blockchain.\n\nUnderstanding Crypto Wallets\n\nA crypto wallet is a tool for managing your digital currencies, capable of storing keys and tracking cryptocurrency ownership. Wallets vary in form, from digital apps to hardware devices, and even paper.\n\nKeypair Essentials\n\nA keypair consists of a secret key and its associated public key. Wallets use keypairs to facilitate secure transactions and manage multiple keypairs for different operations.\n\nPublic Key: Your Wallet Address\n\nThe public key serves as your wallet's address, which you can share publicly. It's used by others to send you cryptocurrency and can sometimes provide information about your wallet's balance.\n\nSecret Key: Keep it Confidential\n\nThe secret key is crucial for authorizing transactions and must be kept private. If someone else accesses it, they can take your tokens. Losing your secret key means losing access to your tokens in that wallet.\n\nWallet Security\n\nWallets offer varying levels of security and convenience. Solana supports multiple wallet types, allowing users to choose the best fit for their needs.\n\nSupported Wallets on Solana\n\nSolana is compatible with various browser and mobile app wallets. For those seeking advanced features, command-line wallets are recommended, as they often include the latest blockchain updates.\n\nSolana Documentation and Resources\n\nFor further information on Solana's features and development tools, explore the Solana documentation, which includes topics like JSON RPC Methods, core concepts, advanced concepts, client libraries, program development, and economics.\n\nSolana Foundation Information\n\nThe Solana Foundation oversees the project, offering grants, resources, and updates. Stay connected with the ecosystem, read the latest blog posts, and subscribe to the newsletter for updates.\n\nÂ© 2024 Solana Foundation. All rights reserved.",
    "metadata": {
      "source": "https://solana.com/docs/intro/wallets",
      "title": "Solana Wallet Guide | Solana",
      "description": "Fast. Decentralized. Scalable. Energy efficient. Solana can power thousands of transactions per second.",
      "language": "en"
    }
  },
  {
    "pageContent": "Introduction to Solana Development\n\nWelcome to the introductory guide for developing on the Solana blockchain. This guide will provide you with the necessary knowledge to start building applications on Solana, including understanding transactions, accounts, and programs.\n\nKey Learning Points:\n\n- Familiarize yourself with Solana developer workflows.\n- Learn about transactions, accounts, and programs.\n- Discover tools for testing and development.\n\nSolana Developer Workflows Overview\n\nSolana's network functions like a vast, global computer where code can be stored and executed for a fee. This code, known as a program or \"smart contract\" on other blockchains, interacts with the network through transactions initiated by clients.\n\nProgram Development\n\nDevelopers can create and deploy programs using languages like Rust, C, and C++. These programs, once deployed, can be accessed by anyone with the knowledge to communicate with them, typically through dApps using client SDKs or the CLI.\n\nClient Development\n\nDevelopers can also create dApps that interact with deployed programs. These dApps can perform a variety of functions, such as managing wallets or facilitating exchanges, by submitting transactions to the programs via client SDKs.\n\nWallets\n\nA wallet consists of a public-private key pair. The public key identifies the account, while the private key is used to authorize transactions on the blockchain.\n\nTransactions\n\nTransactions are signed data structures that contain instructions for the network to perform operations, such as token transfers. They are essential for creating, updating, or deleting on-chain data.\n\nInstructions\n\nInstructions are the basic units of operation within a transaction. They are executed by programs on the blockchain, and if any instruction fails, the entire transaction is invalidated.\n\nTransaction Fees\n\nTransactions incur fees to compensate network validators for their processing power. Fees are based on a base fee per signature and the computational resources used, measured in compute units.\n\nAccounts\n\nAccounts are storage units on Solana that can hold up to 10MB of data, including user programs and system programs. They are essential for storing state between transactions.\n\nPrograms\n\nPrograms are the core of Solana's functionality, handling tasks such as account creation, transaction processing, and fee collection. Developers can interact with both native programs and user-deployed programs using the Solana CLI and SDKs.\n\nTesting and Development Environments\n\nDevelopers have various environments for testing and development, including the Solana Playground for browser-based IDE, local development with a local validator, and three networks: Mainnet Beta, Testnet, and Devnet.\n\nNext Steps\n\nBegin your journey in Solana development by deploying a program, setting up a local development environment, and exploring program development with Rust.\n\nFor more detailed information on these topics, please refer to the Solana documentation, which covers core concepts, advanced topics, client libraries, and economic aspects of the Solana ecosystem.",
    "metadata": {
      "source": "https://solana.com/docs/intro/dev",
      "title": "Introduction to Solana Development | Solana",
      "description": "Learn about the basic development concepts of the Solana blockchain.",
      "language": "en"
    }
  }
]
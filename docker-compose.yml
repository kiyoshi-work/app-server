version: "3.8"
services:
  app:
    image: app-server:1.0.0-dev
    container_name: app-server-dev
    build:
      context: .
      dockerfile: docker/nest/dev.dockerfile
    working_dir: /home/node/workspace
    command: npm run start:debug
    restart: unless-stopped
    tty: true
    volumes:
      - .:/home/node/workspace
      - /home/node/workspace/node_modules
    networks:
      -  app-server-network
    env_file:
      - .env.dev
    ports:
      - '8003:8003'
      - '80:80'

  redis:
    container_name: app-redis
    image: redis
    restart: unless-stopped
    ports:
      - 6379:6379
    command: redis-server --save 20 1 --loglevel warning
    networks:
      - app-server-network
    volumes:
      - app-redis:/data

  database:
    container_name: app-database
    image: postgres:14.1
    restart: unless-stopped
    volumes:
      - app-database:/var/lib/postgres
      - ./docker/postgres:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: 123456
    ports:
      - 5432:5432
    networks:
      - app-server-network

  timescale-database:
    container_name: app-timescale-database
    image: timescale/timescaledb-ha:pg14-latest
    platform: linux/amd64
    restart: unless-stopped
    volumes:
      - app-timescale-database:/var/lib/postgresql/data
      - ./docker/timescaleDB:/docker-entrypoint-initdb.d
    environment:
      # TIMESCALEDB_TELEMETRY: on
      POSTGRES_USER: root
      POSTGRES_PASSWORD: 123456
      PGPORT: 5433
    ports:
      - 5433:5433
    networks:
      - app-server-network

  pubsub-emulator:
    container_name: app-server-pubsub
    image: google/cloud-sdk:emulators
    ports:
      - "8085:8085"
    environment:
      - PUBSUB_EMULATOR_HOST=0.0.0.0:8085
    command: gcloud beta emulators pubsub start --host-port=0.0.0.0:8085
    platform: linux/amd64
    networks:
      - app-server-network


  etcd:
    container_name: app-milvus-etcd
    image: quay.io/coreos/etcd:v3.5.5
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
    command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
    healthcheck:
      test: ["CMD", "etcdctl", "endpoint", "health"]
      interval: 30s
      timeout: 20s
      retries: 3
    volumes:
      - app-etcd:/etcd
    networks:
      - app-server-network

  minio:
    container_name: app-milvus-minio
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    ports:
      - "9001:9001"
      - "9000:9000"
    command: minio server /minio_data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    volumes:
      - app-minio:/minio_data
    networks:
      - app-server-network

  milvus:
    container_name: app-milvus-standalone
    image: milvusdb/milvus:v2.3.12
    command: ["milvus", "run", "standalone"]
    security_opt:
    - seccomp:unconfined
    environment:
      ETCD_ENDPOINTS: etcd:2379
      MINIO_ADDRESS: minio:9000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9091/healthz"]
      interval: 30s
      start_period: 90s
      timeout: 20s
      retries: 3
    ports:
      - "19530:19530"
      - "9091:9091"
    depends_on:
      - "etcd"
      - "minio"
    platform: linux/amd64
    volumes:
      - app-milvus:/var/lib/milvus
    networks:
      - app-server-network

  attu:
    container_name: app-milvus-visualize
    image: zilliz/attu:v2.3.10
    ports:
      - "4567:3000"
    environment:
      - MILVUS_URL=milvus:19530
    networks:
      - app-server-network

  milvus-cli:
    container_name: app-milvus-cli
    image: zilliz/milvus_cli:latest
    command: tail -f /dev/null
    platform: linux/amd64
    tty: true
    networks:
      - app-server-network


  elasticsearch:
    container_name: app-elasticsearch
    image: elasticsearch:8.7.0
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    networks:
      - app-server-network
    ports:
      - 9200:9200

  kibana:
    container_name: app-kibana
    image: kibana:8.7.0
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200/
    networks:
      - app-server-network
    depends_on:
      - elasticsearch
    ports:
      - 5601:5601
      
networks:
  app-server-network:
    driver: bridge

volumes:
  app-redis:
    driver: local
  app-database:
    driver: local
  app-timescale-database:
    driver: local
  app-vector-database:
    driver: local
  app-milvus:
    driver: local
  app-minio:
    driver: local
  app-etcd:
    driver: local
